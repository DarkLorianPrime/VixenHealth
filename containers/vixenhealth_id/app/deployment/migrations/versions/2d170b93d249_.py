"""empty message

Revision ID: 2d170b93d249
Revises: bd4b5f20d65d
Create Date: 2024-05-14 17:14:17.405508

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2d170b93d249'
down_revision: Union[str, None] = 'b1c297ebf06f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


"""
    name: Mapped[str] = mapped_column(String)
    subdomain: Mapped[str] = mapped_column(String, nullable=False)
    description: Mapped[str] = mapped_column(String)
    public: Mapped[bool] = mapped_column(Boolean, default=False)
"""


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    application = op.create_table('application',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subdomain', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_column('account', 'access_mask')
    op.add_column('account_permissions', sa.Column('application_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'account_permissions', 'application', ['application_id'], ['id'])
    op.add_column('account_roles', sa.Column('application_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'account_roles', 'application', ['application_id'], ['id'])
    op.create_unique_constraint(None, 'permission', ['id'])
    op.create_unique_constraint(None, 'role', ['id'])
    op.add_column('role_permissions', sa.Column('application_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'role_permissions', 'application', ['application_id'], ['id'])
    # ### end Alembic commands ###
    op.execute(
        application.insert().values(
            name="VixenHealth",
            subdomain="",
            description="Main vixenhealth application",
            public=True
        )
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.drop_column('role_permissions', 'application_id')
    op.drop_constraint(None, 'role', type_='unique')
    op.drop_constraint(None, 'permission', type_='unique')
    op.drop_constraint(None, 'account_roles', type_='foreignkey')
    op.drop_column('account_roles', 'application_id')
    op.drop_constraint(None, 'account_permissions', type_='foreignkey')
    op.drop_column('account_permissions', 'application_id')
    op.add_column('account', sa.Column('access_mask', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_table('application')
    # ### end Alembic commands ###
